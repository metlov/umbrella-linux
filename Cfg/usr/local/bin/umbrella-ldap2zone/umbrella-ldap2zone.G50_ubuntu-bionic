#!/bin/bash
# Umbrella Linux primary zone file maintenance.
# ldap parsing ifluenced by https://gist.github.com/dansimau/674203
# (c) 2018 Konstantin L. Metlov <metlov@fti.dn.ua>
set -e

if [ "$(whoami)" != "bind" ]; then
        echo "`basename "$0"` must be run as user: bind"
        exit 9
fi

# lock the script from running twice
LOCKFILE=/tmp/`basename "$0"`.lock
if ( set -o noclobber; echo "$$" > "$LOCKFILE") 2> /dev/null; then
    trap 'rm -f "$LOCKFILE"; exit $?' INT TERM EXIT HUP QUIT PIPE

    source /etc/umbrella.conf

    ZONE_HEADER_FILE="/etc/bind/zones/mainzone"
    ZONE_FILE='/var/cache/bind/mainzone'
    ZONE_FILE_TMP=${ZONE_FILE}.tmp

    REVZONE_HOSTLIST="/var/cache/bind/mainzone.rev.tmp"
    ZONE_VIEWS="pubnet secnet DMZnet"
    NETWORKS="pub sec DMZ"

    echo "; Generated by umbrella-ldap2zone" >$ZONE_FILE_TMP
    if [ -e "$ZONE_HEADER_FILE" ]; then
        cat "$ZONE_HEADER_FILE" >>$ZONE_FILE_TMP
    fi
    echo -e "\n\n; workstations, terminals, etc from LDAP" >>$ZONE_FILE_TMP

    ldapsearch -x -LLL -S 'cn' -o ldif-wrap=no '(|(&(|(objectClass=gotoTerminal)(objectClass=gotoWorkstation))(gotoMode=active))(objectClass=device))' cn ipHostNumber | \
        while read line; do
            # Skip LDIF comments
            [ "${line:0:1}" == "#" ] && continue;

            # Empty line means the end of the record.
            if [ "$line" == "" ]; then
                printf "%-40.40s IN   A %s\n" "$RECORD_cn" "$RECORD_ipHostNumber" >> "$ZONE_FILE_TMP"
                printf "%-40.40s IN PTR %s.\n" "$RECORD_ipHostNumber" "$RECORD_cn.$DOMAIN_NAME" >> "$REVZONE_HOSTLIST"
            fi

            attr=${line%%:*}
            value=${line#*: }

            eval RECORD_${attr}=\"$value\"
        done
    if [ ${PIPESTATUS[0]} -ne 0 ]; then
        (>&2 echo "ldapsearch error, zone unchanged")
        exit 9
    fi

    if ! cmp "$ZONE_FILE" "$ZONE_FILE_TMP" &>/dev/null; then
        # zone file differs need to reload
        mv "$ZONE_FILE_TMP" "$ZONE_FILE"
        for zoneview in $ZONE_VIEWS; do
            rndc reload ${DOMAIN_NAME} IN $zoneview &>/dev/null || true
        done
    else
        # zone unchanged, remove the temporary file
        rm -f "$ZONE_FILE_TMP"
    fi

    for net in $NETWORKS; do
    NETVAR=NET_${net^^}
    NETWORK=${!NETVAR/}
    NETMASK=${NETWORK##*/}
    WRAPPINGCLASS=$((NETMASK/8))
    case $WRAPPINGCLASS in
    1*)
        CLADDR="\4.\3.\2"
    ;;
    2*)
        CLADDR="\4.\3"
    ;;
    3*)
        CLADDR="\4"
    ;;
    *)
        echo "Wrong subnet class $WRAPPINGCLASS."
        exit 9
    ;;
    esac

    # write reverse zone header
    REVZONE_HEADER_FILE="/etc/bind/zones/${net}_mainzone.rev"
    REVZONE_FILE="/var/cache/bind/${net}_mainzone.rev"
    REVZONE_FILE_TMP="${REVZONE_FILE}.tmp"
    echo "; Generated by umbrella-ldap2zone" >$REVZONE_FILE_TMP
    if [ -e "$REVZONE_HEADER_FILE" ]; then
        cat "$REVZONE_HEADER_FILE" >>$REVZONE_FILE_TMP
    fi
    echo -e "\n\n; workstations, terminals, etc from LDAP" >>$REVZONE_FILE_TMP

    # append hosts
    if [ -x "$(command -v grepcidr)" ]; then 
        grepcidr "${NETWORK}" "$REVZONE_HOSTLIST" | \
        sed -e "s/\([0-9]\+\)\.\([0-9]\+\)\.\([0-9]\+\)\.\([0-9]\+\)/${CLADDR}/g" \
        >>$REVZONE_FILE_TMP
    fi

    # update and reload zone
    REVZONE_NAME=$(grep '^\$ORIGIN ' $REVZONE_HEADER_FILE | sed -e 's/^\$ORIGIN \(.*\)\.$/\1/g')
#'$
    if ! cmp "$REVZONE_FILE" "$REVZONE_FILE_TMP" &>/dev/null; then
        # zone file differs need to reload
        mv "$REVZONE_FILE_TMP" "$REVZONE_FILE"
        for zoneview in $ZONE_VIEWS; do
            rndc reload ${REVZONE_NAME} IN $zoneview &>/dev/null || true
        done
    else
        # zone unchanged, remove the temporary file
        rm -f "$REVZONE_FILE_TMP"
    fi

    done
    rm -f "$REVZONE_HOSTLIST"

# clean up the lock fiile, and release the trap
    rm -f "$LOCKFILE"
    trap - INT TERM EXIT
else
    echo "Lock Exists: $LOCKFILE owned by $(cat $LOCKFILE)."
fi
