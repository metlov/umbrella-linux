<!-- Umbrella custom decoders -->

<!-- Recognize ssh_dispatch_run_fatal messages from SSH -->
<decoder name="ssh-dispatch-run-fatal">
  <parent>sshd</parent>
  <prematch> fatal: ssh_dispatch_run_fatal:</prematch>
  <regex offset="after_prematch">Connection from (\S+) port (\d+): message authentication code incorrect</regex>
  <order>srcip, srcport</order>
</decoder>

<!-- decode (to be able to ignore) the colord messages -->
<decoder name="colord">
  <program_name>^colord</program_name>
</decoder>

<!-- decode bcfg2-server messages -->
<decoder name="bcfg2-server">
  <program_name>bcfg2-server</program_name>
</decoder>
<decoder name="bcfg2-server-traceback">
  <parent>bcfg2-server</parent>
  <prematch>#012Traceback \(most recent call last\):</prematch>
  <regex>^(\.*)#012Traceback \(most recent call last\):</regex>
  <order>extra_data</order>
</decoder>
<decoder name="bcfg2-server-cfg-error-rendering">
  <parent>bcfg2-server</parent>
  <prematch offset="after_parent">Cfg: Error rendering </prematch>
  <regex offset="after_prematch">^(\S+): (\.*)</regex>
  <order>url,extra_data</order>
</decoder>
<decoder name="bcfg2-server-failed-to-bind-path">
  <parent>bcfg2-server</parent>
  <prematch offset="after_parent">Failed to bind entry Path:</prematch>
  <regex offset="after_prematch">^(\S+):</regex>
  <order>url</order>
</decoder>
<decoder name="bcfg2-server-failed-to-parse-file">
  <parent>bcfg2-server</parent>
  <prematch offset="after_parent">^Failed to parse file </prematch>
  <regex offset="after_prematch">^(\S+): (\.*)</regex>
  <order>url,extra_data</order>
</decoder>
<decoder name="bcfg2-server-failed-to-import-interaction">
  <parent>bcfg2-server</parent>
  <prematch offset="after_parent">^Failed to import interaction:</prematch>
  <regex offset="after_prematch">^(\.+)</regex>
  <order>extra_data</order>
</decoder>
<decoder name="bcfg2-server-error-event-changed">
  <parent>bcfg2-server</parent>
  <prematch offset="after_parent">^Error in handling of event changed for </prematch>
  <regex offset="after_prematch">^(\S+):(\.*)#012Traceback</regex>
  <order>url,extra_data</order>
</decoder>

<!-- decode krb5kdc messages -->
<decoder name="krb5kdc">
  <program_name>^krb5kdc</program_name>
</decoder>
<decoder name="krb5kdc-preauth-generic-failure">
  <parent>krb5kdc</parent>
  <prematch offset="after_parent">^preauth \(encrypted_timestamp\) verify failure: Decrypt integrity check failed</prematch>
  <regex offset="after_prematch">^(\S+)</regex>
  <order>extra_data</order>
</decoder>
<decoder name="krb5kdc-preauth-auth-failure">
  <parent>krb5kdc</parent>
  <prematch offset="after_parent">^AS_REQ \(\d+ etypes {\.+}\) \d+.\d+.\d+.\d+: PREAUTH_FAILED: \w+@\S+ for krbtgt/\S+ Decrypt integrity check failed</prematch>
  <regex offset="after_parent">^AS_REQ \(\d+ etypes {\.+}\) (\d+.\d+.\d+.\d+): PREAUTH_FAILED: (\w+)@\S+</regex>
  <order>srcip, user</order>
</decoder>

<!-- decode systemd messages -->
<decoder name="systemd">
  <program_name>^systemd</program_name>
</decoder>
<decoder name="systemd-failed-to-reset-devices-list-on">
  <parent>systemd</parent>
  <prematch offset="after_parent">^Failed to reset devices.list on </prematch>
  <regex offset="after_prematch">^(\S+): </regex>
  <order>extra_data</order>
</decoder>
<decoder name="systemd-failed-to-reset-devices-list">
  <parent>systemd</parent>
  <prematch offset="after_parent">^user.slice: Failed to reset devices.list: </prematch>
  <regex offset="after_prematch">^(\.+)$</regex>
  <order>extra_data</order>
</decoder>

<!-- decode OpenVPN messages -->
<decoder name="openvpn">
  <program_name>^openvpn</program_name>
</decoder>
<decoder name="openvpn-cannot-locate-HMAC">
  <parent>openvpn</parent>
  <prematch offset="after_parent">^TLS Error: cannot locate HMAC in incoming packet from </prematch>
  <regex offset="after_prematch">(\d+.\d+.\d+.\d+):</regex>
  <order>srcip</order>
</decoder>
<decoder name="openvpn-incoming-packet-auth-failed">
  <parent>openvpn</parent>
  <prematch offset="after_parent">^TLS Error: incoming packet authentication failed from </prematch>
  <regex offset="after_prematch">(\d+.\d+.\d+.\d+):</regex>
  <order>srcip</order>
</decoder>

<!-- decode rpc.gssd messages -->
<decoder name="rpc.gssd">
  <program_name>^rpc.gssd</program_name>
</decoder>
<decoder name="rpc.gssd-cant-open-pipefs">
  <parent>rpc.gssd</parent>
  <prematch offset="after_parent">^ERROR: can't open /run/rpc_pipefs/nfs/</prematch>
  <regex offset="after_prematch">(\S+): No such file or directory</regex>
  <order>extra_data</order>
</decoder>

<!-- decode org.gnome.keyring.SystemPrompter messages -->
<decoder name="org.gnome.keyring.SystemPrompter">
  <program_name>^org.gnome.keyring.SystemPrompter</program_name>
</decoder>

<!-- decode org.gtk.vfs.Daemon messages -->
<decoder name="org.gtk.vfs.Daemon">
  <program_name>^org.gtk.vfs.Daemon</program_name>
</decoder>

<!-- decode com.canonical.indicator.sound-gtk2 messages -->
<decoder name="com.canonical.indicator.sound-gtk2">
  <program_name>^com.canonical.indicator.sound-gtk2</program_name>
</decoder>

<!-- decode com.canonical.indicator.application messages -->
<decoder name="com.canonical.indicator.application">
  <program_name>^com.canonical.indicator.application</program_name>
</decoder>

<decoder name="horde_new">
  <program_name>^HORDE</program_name>
  <prematch>^[imp] |^[horde] </prematch>
</decoder>

<decoder name="horde_new_success">
  <parent>horde_new</parent>
  <prematch offset="after_parent">^Login success </prematch>
  <regex offset="after_prematch">^for (\S+) to \S+ \((\S+)\) |^for (\S+) \((\S+)\)</regex>
  <order>user, srcip</order>
</decoder>

<decoder name="horde_new_failed">
  <parent>horde_new</parent>
  <prematch offset="after_parent">^FAILED LOGIN</prematch>
  <regex offset="after_prematch">^ for (\S+) to \S+ \((\S+)\) |^ for (\S+) \((\S+)\)</regex>
  <order>user, srcip</order>.
</decoder>

<decoder name="auth_new_dovecot">
  <program_name>^auth</program_name>
  <prematch>^pam_krb5\(dovecot:auth\): </prematch>
</decoder>

<decoder name="auth_new_dovecot_success">
  <parent>auth_new_dovecot</parent>
  <prematch offset="after_parent">^user </prematch>
  <regex offset="after_prematch">^(\S+) </regex>
  <order>user</order>
</decoder>

<decoder name="auth_new_dovecot_failed">
  <parent>auth_new_dovecot</parent>
  <prematch offset="after_parent">^authentication failure; logname=</prematch>
  <regex offset="after_prematch">^(\S+) uid=\d euid=\d tty=\S+ ruser=\S+ rhost=(\d+.\d+.\d+.\d+)</regex>
  <order>user, srcip</order>
</decoder>
