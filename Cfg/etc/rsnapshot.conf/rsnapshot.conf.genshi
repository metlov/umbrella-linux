{% python
from genshi.template import TemplateError
execfile(repo+'/Python/00_baseparams.py')
execfile(repo+'/Python/10_funchosts.py')
%}\
#################################################
# rsnapshot.conf - rsnapshot configuration file #
#################################################
#                                               #
# PLEASE BE AWARE OF THE FOLLOWING RULES:       #
#                                               #
# This file requires tabs between elements      #
#                                               #
# Directories require a trailing slash:         #
#   right: /home/                               #
#   wrong: /home                                #
#                                               #
#################################################

#######################
# CONFIG FILE VERSION #
#######################

config_version	1.2

###########################
# SNAPSHOT ROOT DIRECTORY #
###########################

# All snapshots will be stored under this root directory.
#
snapshot_root	/backups/auto/

# If no_create_root is enabled, rsnapshot will not automatically create the
# snapshot_root directory. This is particularly useful if you are backing
# up to removable media, such as a FireWire or USB drive.
#
#no_create_root	1

#################################
# EXTERNAL PROGRAM DEPENDENCIES #
#################################

# LINUX USERS:   Be sure to uncomment "cmd_cp". This gives you extra features.
# EVERYONE ELSE: Leave "cmd_cp" commented out for compatibility.
#
# Note: Linux users with gnu cp/coreutils version > 5.3, should leave
# cmd_cp commented out, since cp fails to create destination directories
# with a trailing slash for versions 5.3 or later.
#
# See the README file or the man page for more details.
#
cmd_cp		/bin/cp

# uncomment this to use the rm program instead of the built-in perl routine.
#
cmd_rm		/bin/rm

# rsync must be enabled for anything to work. This is the only command that
# must be enabled.
#
cmd_rsync	/usr/bin/rsync

# Uncomment this to enable remote ssh backups over rsync.
#
cmd_ssh	/usr/bin/ssh

# Comment this out to disable syslog support.
#
cmd_logger	/usr/bin/logger

# Uncomment this to specify the path to "du" for disk usage checks.
# If you have an older version of "du", you may also want to check the
# "du_args" parameter below.
#
cmd_du		/usr/bin/du

# Uncomment this to specify the path to rsnapshot-diff.
#
cmd_rsnapshot_diff	/usr/bin/rsnapshot-diff

# Specify the path to a script (and any optional arguments) to run right
# before rsnapshot syncs files
#
#cmd_preexec	/path/to/preexec/script

# Specify the path to a script (and any optional arguments) to run right
# after rsnapshot syncs files
#
#cmd_postexec	/path/to/postexec/script

#########################################
#           BACKUP INTERVALS            #
# Must be unique and in ascending order #
# i.e. hourly, daily, weekly, etc.      #
#########################################

interval	daily	7
interval	weekly	4
interval	monthly	12

############################################
#              GLOBAL OPTIONS              #
# All are optional, with sensible defaults #
############################################

# Verbose level, 1 through 5.
# 1     Quiet           Print fatal errors only
# 2     Default         Print errors and warnings only
# 3     Verbose         Show equivalent shell commands being executed
# 4     Extra Verbose   Show extra verbose information
# 5     Debug mode      Everything
#
verbose		2

# Same as "verbose" above, but controls the amount of data sent to the
# logfile, if one is being used. The default is 3.
#
loglevel	3

# If you enable this, data will be written to the file you specify. The
# amount of data written is controlled by the "loglevel" parameter.
#
logfile	/var/log/rsnapshot

# If enabled, rsnapshot will write a lockfile to prevent two instances
# from running simultaneously (and messing up the snapshot_root).
# If you enable this, make sure the lockfile directory is not world
# writable. Otherwise anyone can prevent the program from running.
#
lockfile	/var/run/rsnapshot.pid

# Default rsync args. All rsync commands have at least these options set.
#
#rsync_short_args	-a
#rsync_long_args	--delete --numeric-ids --relative --delete-excluded

# ssh has no args passed by default, but you can specify some here.
#
#ssh_args	-p 22
ssh_args	-i /root/.ssh/id_rsa

# Default arguments for the "du" program (for disk space reporting).
# The GNU version of "du" is preferred. See the man page for more details.
# If your version of "du" doesn't support the -h flag, try -k flag instead.
#
#du_args	-csh

# If this is enabled, rsync won't span filesystem partitions within a
# backup point. This essentially passes the -x option to rsync.
# The default is 0 (off).
#
#one_fs		0

# The include and exclude parameters, if enabled, simply get passed directly
# to rsync. If you have multiple include/exclude patterns, put each one on a
# seperate line. Please look up the --include and --exclude options in the
# rsync man page for more details. 
# 
#include	???
#include	???
exclude		/backups
exclude		/boot
exclude		/home
exclude		/nfs
exclude		/grid
exclude		/tmp
exclude		/mnt
exclude		/media
exclude		/lib
exclude		/bin
exclude		/sbin
exclude		/run
exclude		/usr
exclude		/var/tmp
exclude		/var/cache
exclude		/var/lib/mysql
exclude		/var/svn
exclude		/export/home/*/.googleearth/Cache
exclude		/export/home/*/.mozilla/firefox/**/Cache
exclude		/export/home/*/.thumbnails
exclude		/export/home/*/.ies4linux
exclude		/export/home/*/.cache
exclude		/export/home/*/.local/share/Trash
exclude		/export/home/*/Downloads
exclude		/export/home/*/temp
exclude		/export/apt-cacher-ng
exclude		/export/home/*/Desktop/BitTorrent?Downloads
exclude		/export/home/*/.unison/backup
exclude		/export/home/*/.bittorrent
exclude		/export/home/*/.wine
exclude		/vm/*.raw
exclude		/vm/backups/*.raw
exclude		/vm/tmp
exclude		/dev
exclude		/proc
exclude		/sys
exclude		/cgroup
exclude		/afs

# The include_file and exclude_file parameters, if enabled, simply get
# passed directly to rsync. Please look up the --include-from and
# --exclude-from options in the rsync man page for more details.
#
#include_file	/path/to/include/file
#exclude_file	/path/to/exclude/file

# If your version of rsync supports --link-dest, consider enable this.
# This is the best way to support special files (FIFOs, etc) cross-platform.
# The default is 0 (off).
#
link_dest	1

# When sync_first is enabled, it changes the default behaviour of rsnapshot.
# Normally, when rsnapshot is called with its lowest interval
# (i.e.: "rsnapshot hourly"), it will sync files AND rotate the lowest
# intervals. With sync_first enabled, "rsnapshot sync" handles the file sync,
# and all interval calls simply rotate files. See the man page for more
# details. The default is 0 (off).
#
#sync_first	0

# If enabled, rsnapshot will move the oldest directory for each interval
# to [interval_name].delete, then it will remove the lockfile and delete
# that directory just before it exits. The default is 0 (off).
#
#use_lazy_deletes	0

###############################
### BACKUP POINTS / SCRIPTS ###
###############################
{% for func, funchost in funchostsshort.iteritems() %}\
{%     if metadata.hostname != funchosts[func] %}\
backup	root@${funchost}:/	${funchost}/	+rsync_long_args=--exclude=/nfs/
{%     end %}\
{%     if metadata.hostname == funchosts[func] %}\
backup	/	${funchost}/	+rsync_long_args=--exclude=/nfs/
{%     end %}\
{% end %}

# Mysql databases on config
backup_script	/etc/rsnapshot_dump_mysql_config	_databases_${funchostsshort['config']}/
{% if 'archive' in funchosts %}\
backup_script	/etc/rsnapshot_dump_mysql_archive	_databases_${funchostsshort['archive']}/
{% end %}\
{% if 'DMZwww' in funchosts %}\
backup_script	/etc/rsnapshot_dump_mysql_DMZwww	_databases_${funchostsshort['DMZwww']}/
{% end %}\
{% if 'DMZlib' in funchosts %}\
backup_script	/etc/rsnapshot_dump_mysql_DMZlib	_databases_${funchostsshort['DMZlib']}/
{% end %}\
backup_script	/etc/rsnapshot_dump_LDAP	_LDAP/
#backup_script	/etc/rsnapshot_dump_svn	_subversion/
