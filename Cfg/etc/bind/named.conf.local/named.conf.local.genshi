{% python
execfile(repo+'/Python/00_baseparams.py')
execfile(repo+'/Python/10_funchosts.py')
execfile(repo+'/Python/20_networks.py')
execfile(repo+'/Python/30_networking.py')
%}\
{% if 'router' in metadata.groups %}\
{% for iface in ['pub','sec','DMZ'] %}\

acl ${iface}net { ${intnets_str[iface+'if']};${' localhost;' if iface=='pub' else ''} };
view ${iface}net {
    match-clients { ${iface}net; };
    allow-recursion { any; };
    attach-cache "common-cache";
    include "/etc/bind/named.conf.default-zones";
    include "/etc/bind/named.conf.ldap2zone";
{%   for i in range(len(domain_names_list)) %}\
{%     if domain_names_list[i] != domain_name %}\

    zone "${domain_names_list[i]}" {
        type master;
        file "/etc/bind/zones/${iface}_zone${int(i)}";
        allow-update { none; };
        notify no;
    };
{%     end %}\
{%   end %}\
};
{% end %}\
{% end if 'router' %}\
{% if 'DMZsmtp' in metadata.groups %}\
include "/etc/bind/named.conf.default-zones";

// zones for which we answer authoritatively
{%   for i in range(len(domain_names_list)) %}\
zone "${domain_names_list[i]}" {
    type master;
    file "/etc/bind/zones/zone${int(i)}";
    allow-update { none; };
{%       if domain_names_list[i] in domain_notifies %}\
    allow-transfer { ${"; ".join(domain_notifies[domain_names_list[i]])+"; "}};
    also-notify { ${"; ".join(domain_notifies[domain_names_list[i]])+"; "}};
{%       end %}\
    notify yes;
};
{% end %}\
{% for domain in metadata.Properties['umbrella.xml'].xdata.findall('domain') %}\
{%     if domain.find('master') is not None %}\
{% python
d_name=domain.find('name').text.strip()
masters=set()
for master in domain.findall('master'):
  masters.add(master.text.strip())
%}\
zone "${d_name}" {
    type slave;
    file "/var/cache/bind/${d_name}-external";
    masters { ${"; ".join(masters)+"; "}};
    also-notify { ${"; ".join(masters)+"; "}};
};
{%     end %}\
{% end %}\
{% end if 'DMZsmtp' %}\
