{% python
import socket
from genshi.template import TemplateError
exec(open(repo+'/Python/00_baseparams.py').read())
exec(open(repo+'/Python/10_funchosts.py').read())
exec(open(repo+'/Python/20_networks.py').read())
exec(open(repo+'/Python/30_networking.py').read())
exec(open(repo+'/Python/35_organization.py').read())
%}\
{% if 'DMZsmtp' in metadata.groups %}\
{%     if 'ubuntu-bionic' in metadata.groups %}\
acl DMZ { ${networks['DMZif'].with_prefixlen}; 127.0.0.1/8;};
{%     end %}\
{%     if 'ubuntu-bionic' not in metadata.groups %}\
acl DMZ { ${networks['DMZif'].with_prefixlen}; 127.0.0.0/8;};
{%     end %}\

{% end %}\
options {
        directory "/var/cache/bind";
{% if 'DMZsmtp' not in metadata.groups and 'DMZsmtp' in funchosts %}\
        forwarders { ${funcifs['DMZsmtp']}; };
{% end %}\
{% if 'DMZsmtp' in metadata.groups or 'DMZsmtp' not in funchosts %}\
{%   if DNScache is not None %}\
        forwarders { ${'; '.join(DNScache)}; };
{%   end %}\
{% end %}\
{% if not 'DMZsmtp' in metadata.groups %}\
{% python
# external interface is not served by DNS
ifs.pop('extif', None)
networks.pop('extif', None)
strifaces='; '.join(sorted([str(interface) for interface in ifs.values()]))
strnets=[n.with_prefixlen for n in networks.values()]
strnets.extend([n.with_prefixlen for n in netclasses.keys()])
strnets='; '.join(sorted(strnets))
%}\
        listen-on { ${strifaces}; 127.0.0.1;};
        allow-recursion { ${strnets}; 127.0.0.0/24;};
        attach-cache "common-cache";
{% end %}\
{% if 'DMZsmtp' in metadata.groups %}\
        allow-query { any; };
        allow-recursion { DMZ; };
        allow-query-cache { DMZ; };
{% end %}\
        auth-nxdomain no;    # conform to RFC1035
        listen-on-v6 { none; };
{% if 'ubuntu-bionic' not in metadata.groups %}\
        dnssec-validation yes;
{% end %}\
};

server 0.0.0.0/0 {
        edns no;
};
